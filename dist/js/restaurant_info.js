let restaurant;var newMap;document.addEventListener("DOMContentLoaded",e=>{initMap(),addReview()}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoiYWZyb3NhbSIsImEiOiJjamljazg3Y2kwMXY4M3FwOXljdms5azhvIn0.8g4QAAuWOMBL1Lp_I2uDuw",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(a,n)=>{console.log(t),self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(a)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.src=DBHelper.imageUrlForRestaurant(e),t.alt=e.photext;const a=DBHelper.imageUrlForRestaurant(e,"rest-list"),n=a+"sm_2x.jpg",r=a+"md_1x.jpg",s=a+"lg_2x.jpg";t.src=n,t.srcset=`${r} 400w, ${s} 700w`,t.alt=e.photext,document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),DBHelper.fetchReviewsById(self.restaurant.id).then(e=>{self.reviews=e,fillReviewsHTML()})}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{let t=self.restaurant;const a=document.getElementById("restaurant-hours");for(let t in e){const n=document.createElement("tr"),r=document.createElement("td");r.innerHTML=t,n.appendChild(r);const s=document.createElement("td");s.innerHTML=e[t],n.appendChild(s),a.appendChild(n)}const n=document.createElement("button");let r=document.createElement("i");r.className="fas fa-trophy",n.append(r),n.onclick=(()=>{var e=t.is_favorite;e?(e="true",alertify.success("A new Favorite")):(e="false",alertify.warning("Removed Favorite")),console.log(e),applyNewClass(n,e),DBHelper.updFavStatus(t.id,e),t.is_favorite=!t.is_favorite}),applyNewClass(n,t.is_favorite),a.append(n)}),applyNewClass=((e,t)=>{console.log(e,t),"true"!==t?(e.classList.remove("fav_yes"),e.classList.add("fav_no"),e.setAttribute("aria-label","Not Favorited")):(e.classList.remove("fav_no"),e.classList.add("fav_yes"),e.setAttribute("aria-label","Favorited"))}),addReview=(()=>{let e=getParameterByName("id");const t=[document.getElementById("reviewer-name").value,document.getElementById("rating").value,document.getElementById("new-comment").value,e],a={restaurant_id:parseInt(t[3]),name:t[0],createdAt:new Date,rating:parseInt(t[1]),comments:t[2]};navigator.onLine?(DBHelper.addNewReview(a),createReviewHTML(a),document.getElementById("rev-form").reset(alertify.success("New review was added"))):(DBHelper.addNewReview(a),createReviewHTML(a),document.getElementById("rev-form").reset(alertify.error("OFFLINE = Review added to DB")))}),fillReviewsHTML=((e=self.reviews)=>{console.log(self.reviews);const t=document.getElementById("reviews-container"),a=document.createElement("h3");if(a.innerHTML="Reviews",t.appendChild(a),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const n=document.getElementById("reviews-list");e.forEach(e=>{n.appendChild(createReviewHTML(e))}),t.appendChild(n)}),createReviewHTML=(e=>{const t=document.createElement("li"),a=document.createElement("p");a.innerHTML=e.name,t.appendChild(a);const n=document.createElement("p");let r=new Date(e.createdAt).toString();n.innerHTML=r,t.appendChild(n);const s=document.createElement("p");s.innerHTML=`Rating: ${e.rating}`,t.appendChild(s);const l=document.createElement("p");return l.innerHTML=e.comments,t.appendChild(l),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),a=document.createElement("li");a.innerHTML=e.name,t.appendChild(a)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const a=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null});